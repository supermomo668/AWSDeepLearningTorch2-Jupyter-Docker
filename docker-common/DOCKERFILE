ARG AWS_ACCOUNT_ID=$AWS_ACCOUNT_ID
# From hub: supermomo668/dev:aws-pytorch-training_2.0.1-cpu-py310-ubuntu20.04-ec2
# From AWS: ${AWS_ACCOUNT_ID}.dkr.ecr.us-east-1.amazonaws.com/pytorch-training:2.0.1-gpu-py310-cu118-ubuntu20.04-ec2
FROM supermomo668/dev:aws-pytorch-training_2.0.1-cpu-py310-ubuntu20.04-ec2 AS base1
 
# install deps 
RUN apt update --fix-missing && \
	apt install nodejs \
	ffmpeg libsm6 libxext6 graphviz protobuf-compiler openjdk-8-jdk-headless -y
RUN apt install python3-dev default-libmysqlclient-dev libssl-dev build-essential tmux wget docker.io rsync zip unzip net-tools  -y 
	
RUN apt install npm -y && npm install -g npm@latest && apt upgrade -y && apt autoremove -y

ENV INSTALL_SCRIPTS /tmp/scripts
COPY cloud-tools-setup/* ${INSTALL_SCRIPTS}/

FROM base1 AS  base2

RUN echo "Run scripts installation ..." && chmod +x ${INSTALL_SCRIPTS}/*.sh && \
find ${INSTALL_SCRIPTS} -maxdepth 1 -type f -name "*.sh" -exec bash {} \; > results.out
RUN apt install default-mysql-client

FROM base2 as builder

# Create conda virtual env
COPY docker-common/*.yml docker-common/*.txt ./
RUN conda update -n base -c defaults conda -y && conda install -c conda-forge jupyterlab -y
RUN conda env create -f environment-dl.yml && conda env create -f environment-app.yml
# Create 1st conda env: dl
SHELL ["conda", "run", "-n", "dl", "/bin/bash", "-c"]
	# install python deps and update all in 'default' environment
# RUN python -m pip install -U pip && python -m pip install -r requirements-dl.txt
# Create 2nd conda env: dl
SHELL ["conda", "run", "-n", "app", "/bin/bash", "-c"]
	# install python deps and update all in 'default' environment
RUN python -m pip install -U pip && python -m pip install -r requirements-app.txt

# Required to run jupyter process successfully in background
ENV TINI_VERSION v0.6.0
ADD https://github.com/krallin/tini/releases/download/${TINI_VERSION}/tini /usr/bin/tini
RUN chmod +x /usr/bin/tini
ENTRYPOINT ["/usr/bin/tini", "--"]
# Update all python deps
# SHELL ["conda", "run", "-n", "dl", "/bin/bash", "-c"]
# Update all python modules
# RUN pip list --outdated --format=freeze | grep -v '^\-e' | cut -d = -f 1 | xargs -n1 pip install -U 

FROM builder as runner

WORKDIR /root/projects
SHELL ["/bin/bash", "-c"]
RUN echo '{"storage-driver": "overlay2"}' > /etc/docker/daemon.json && conda init && echo "activate dl" >> ~/.bashrc && . ~/.bashrc
CMD ["jupyter", "lab", "--port" , "8888", "--no-browser" ,"--ip", "0.0.0.0", "--allow-root"]
